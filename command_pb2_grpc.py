# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import command_pb2 as command__pb2


class DukongGSStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_stream(
                '/protocol.DukongGS/Login',
                request_serializer=command__pb2.LoginRequest.SerializeToString,
                response_deserializer=command__pb2.CommandMessage.FromString,
                )
        self.StartGame = channel.unary_unary(
                '/protocol.DukongGS/StartGame',
                request_serializer=command__pb2.StartGameRequest.SerializeToString,
                response_deserializer=command__pb2.StartGameReply.FromString,
                )
        self.StopGame = channel.unary_unary(
                '/protocol.DukongGS/StopGame',
                request_serializer=command__pb2.StopGameRequest.SerializeToString,
                response_deserializer=command__pb2.StopGameReply.FromString,
                )
        self.Chat = channel.stream_stream(
                '/protocol.DukongGS/Chat',
                request_serializer=command__pb2.ChatMessage.SerializeToString,
                response_deserializer=command__pb2.ChatMessage.FromString,
                )


class DukongGSServicer(object):
    """The greeting service definition.
    """

    def Login(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chat(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DukongGSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_stream_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=command__pb2.LoginRequest.FromString,
                    response_serializer=command__pb2.CommandMessage.SerializeToString,
            ),
            'StartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGame,
                    request_deserializer=command__pb2.StartGameRequest.FromString,
                    response_serializer=command__pb2.StartGameReply.SerializeToString,
            ),
            'StopGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StopGame,
                    request_deserializer=command__pb2.StopGameRequest.FromString,
                    response_serializer=command__pb2.StopGameReply.SerializeToString,
            ),
            'Chat': grpc.stream_stream_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=command__pb2.ChatMessage.FromString,
                    response_serializer=command__pb2.ChatMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.DukongGS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DukongGS(object):
    """The greeting service definition.
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protocol.DukongGS/Login',
            command__pb2.LoginRequest.SerializeToString,
            command__pb2.CommandMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.DukongGS/StartGame',
            command__pb2.StartGameRequest.SerializeToString,
            command__pb2.StartGameReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.DukongGS/StopGame',
            command__pb2.StopGameRequest.SerializeToString,
            command__pb2.StopGameReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Chat(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/protocol.DukongGS/Chat',
            command__pb2.ChatMessage.SerializeToString,
            command__pb2.ChatMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
